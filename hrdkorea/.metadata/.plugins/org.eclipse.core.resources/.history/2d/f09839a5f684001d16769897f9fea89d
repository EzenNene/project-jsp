package BoardController;

import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.util.List;

import javax.servlet.ServletConfig;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.beanutils.BeanUtils;

import DAO.BoardDAO;
import DTO.Board;

@WebServlet("/")
public class BoardController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private BoardDAO dao;
	private ServletContext ctx;

	@Override
	public void init(ServletConfig config) throws ServletException {
		super.init(config);

		// init은 서블릿객체 생성 시 한번만 실행
		dao = new BoardDAO();
		ctx = getServletContext(); // 웹 어플리케이션의 자원관리 (로그인 유지)
	}

	public BoardController() {
		super();
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8"); // request 객체에 저장된 한글깨짐 방지
		doPro(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8"); // request 객체에 저장된 한글깨짐 방지
		doPro(request, response);
	}

	protected void doPro(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String context = request.getContextPath();
		String command = request.getServletPath();
		String site = null;

		// 경로 라우팅(경로를 찾아줌)
		switch (command) {
		case "/list":
			site = getList(request);
			break;
		case "/view":
			site = getView(request);
			break;
		case "/write": // 글쓰기 화면
			site = "write.jsp";
			break;
		case "/insert": // insert 기능
			site = insertBoard(request);
			break;
		}
		
		/*
		 * redirect:	URL의 변화 O, 		객체의 재사용 X (request, response 객체)
		 * forward: 	URL의 변화 X (보안..),	객체의 재사용 O (request, response 객체)
		 * 
		 */
		
		
		
		if(site.startsWith("redirect:/")) { // redirect
			String rview = site.substring("redirect:/".length());
			System.out.println(rview);
			
			response.sendRedirect(rview);
			
		} else { // forward
			ctx.getRequestDispatcher("/" + site).forward(request, response);
		}
		
	}

	public String getList(HttpServletRequest request) {
		List<Board> list;
		try {
			list = dao.getList();
			request.setAttribute("boardList", list); // 키 밸류
		} catch (Exception e) {
			e.printStackTrace();
			ctx.log("게시판 목록 생성 과정에서 문제 발생");
			
			// 사용자 한테 보여주기 위해 저장
			request.setAttribute("error", "게시판 목록이 정상적으로 처리되지 않았습니다");
		}
		return "index.jsp";
	}
	
	public String getView(HttpServletRequest request) {
		int board_no = Integer.parseInt(request.getParameter("board_no"));
		
		try {
			dao.updateviews(board_no); // 조회수 증가
			Board b = dao.getView(board_no);
			request.setAttribute("board", b); // 키 밸류
		} catch (Exception e) {
			e.printStackTrace();
			ctx.log("게시판을 가져오는 과정에서 문제 발생");
			
			// 사용자 한테 보여주기 위해 저장
			request.setAttribute("error", "게시글을 가져오지 못했습니다");
		}
		return "view.jsp";
	}
	
	public String insertBoard(HttpServletRequest request) {
		
		/*
		b.setUser_id(request.getParameter("user_id"));
		b.setTitle(request(getParameter("title"));
		b.setContent(request.getParameter("content"));		
		*/
		
		Board b = new Board();
		try {
			BeanUtils.populate(b, request.getParameterMap());
			dao.insertBoard(b);
			
		} catch (Exception e) {
			e.printStackTrace();
			ctx.log("추가 과정에서 문제발생");
			request.setAttribute("error", "게시글이 등록되지 못했습니다");
			return getList(request);
		}
		return "redirect:/list";
	}
}
